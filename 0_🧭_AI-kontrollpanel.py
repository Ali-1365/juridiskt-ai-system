
import streamlit as st
import pandas as pd
import json
import os
from datetime import datetime, timedelta

st.set_page_config(page_title="üß≠ AI-Kontrollpanel", layout="wide")
st.title("üß≠ Juridisk AI ‚Äì Kontrollpanel")

m√•l_dir = "m√•l"
if not os.path.isdir(m√•l_dir):
    st.warning("Ingen m√•lmapp hittades.")
else:
    m√•lmappar = [d for d in os.listdir(m√•l_dir) if os.path.isdir(os.path.join(m√•l_dir, d))]
    if not m√•lmappar:
        st.info("Inga registrerade m√•l.")
    else:
        for m√•l_id in m√•lmappar:
            base = os.path.join(m√•l_dir, m√•l_id)
            try:
                with open(os.path.join(base, "risk.json")) as f: risk = json.load(f)["profil"]
                with open(os.path.join(base, "prejudikat.json")) as f: prejudikat = json.load(f)["l√§ge"]
                with open(os.path.join(base, "dok_status.json")) as f: dok = json.load(f)["status"]
                proc = {}
                try:
                    with open(os.path.join(base, "process.json")) as f:
                        proc = json.load(f)
                except:
                    pass
                kommentar = proc.get("kommentar", "")
                √•tg√§rd = proc.get("√•tg√§rd", "")
                kommun = proc.get("senaste_kommunikation", "")
                deadline = proc.get("senast_inl√§mning", "")
                handl = proc.get("handl√§ggare", "")

                # Bed√∂m flaggniv√•
                idag = datetime.now().date()
                dl_date = datetime.strptime(deadline, "%Y-%m-%d").date() if deadline else None
                deadline_flag = dl_date and (dl_date - idag).days <= 2
                high_risk = risk == "H√∂g"
                # V√§lj bakgrund
                if high_risk and deadline_flag:
                    bg = "background-color: #f8d7da"  # r√∂tt
                elif high_risk or deadline_flag:
                    bg = "background-color: #fff3cd"  # gult
                else:
                    bg = "background-color: #d4edda"  # gr√∂nt

                # Visa rad
                with st.container():
                    st.markdown(f"<div style='{bg}; padding:10px; border-radius:5px'>", unsafe_allow_html=True)
                    cols = st.columns([2,2,2,2,1])
                    cols[0].markdown(f"**{m√•l_id}**")
                    cols[1].markdown(f"Risk: {risk} {'üî¥' if high_risk else 'üü¢'}")
                    cols[2].markdown(f"Prejudikat: {prejudikat}")
                    cols[3].markdown(f"Deadline: {deadline} {'‚è∞' if deadline_flag else ''}")
                    # Detaljer-knapp
                    if cols[4].button("Visa detaljer", key=m√•l_id):
                        with st.expander("Detaljer f√∂r " + m√•l_id, expanded=True):
                            st.markdown(f"- **Kommentar:** {kommentar or '‚Äì'}")
                            st.markdown(f"- **√Ötg√§rd:** {√•tg√§rd or '‚Äì'}")
                            st.markdown(f"- **Senaste kommunikation:** {kommun or '‚Äì'}")
                            st.markdown(f"- **Handl√§ggare:** {handl or '‚Äì'}")
                    st.markdown("</div>", unsafe_allow_html=True)
            except Exception as e:
                continue
